services:
  author-dc-postgres:
    container_name: 'author-dc-postgres'
    image: 'postgres:15.1'
    environment:
      POSTGRES_DB: 'tailor_dev'
      POSTGRES_USER: 'dev'
      POSTGRES_PASSWORD: 'dev'
    expose:
      - '5432'
    ports:
      - '5432:5432'
    restart: 'no'

  author-dc-redis:
    container_name: author-dc-redis
    image: redis:7.4.0
    expose:
      - '6379'
    ports:
      - '6379:6379'

  author-dc-localstack:
    container_name: author-dc-localstack
    image: localstack/localstack
    expose:
      - '4566'
    ports:
      - '4566:4566'
    environment:
      - SERVICES=s3:4566
      - BUCKET_NAME=test

  author-dc-backend:
    container_name: author-dc-backend
    depends_on:
      - 'author-dc-postgres'
      - 'author-dc-redis'
      - 'author-dc-localstack'
    build:
      dockerfile: './Dockerfile'
      context: '.'
    expose:
      - '3000'
    # Make .env based
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: 'development'
      HOSTNAME: 'localhost'
      PROTOCOL: 'http'
      PORT: 3000
      REVERSE_PROXY_PORT: 3000
      DATABASE_NAME: 'tailor_dev'
      DATABASE_USER: 'dev'
      DATABASE_PASSWORD: 'dev'
      DATABASE_HOST: 'author-dc-postgres'
      STORAGE_PROVIDER: 'amazon'
      STORAGE_ENDPOINT: 'http://author-dc-localstack:4566'
      STORAGE_REGION: 'us-east-1'
      STORAGE_KEY: 'test'
      STORAGE_SECRET: 'test'
      STORAGE_BUCKET: 'test'
      KV_STORE_URL: 'redis://author-dc-redis:6379'
      KV_STORE_DEFAULT_TTL: 0
      AUTH_JWT_SECRET: 'dev_secret123.'
      AUTH_JWT_ISSUER: 'tailor'
      AUTH_JWT_COOKIE_SECRET: 'test_cookie_secret'
    restart: 'no'
